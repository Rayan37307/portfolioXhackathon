---
import client from '@/lib/client'
import { formatDateByTimeZone } from '@/lib/utils'

interface Props {
  class?: string
}

const { class: className } = Astro.props

let data = null;
let formattedDate = '';

try {
  const response = await client.api.github['repo-info'][':owner'][
    ':repository'
  ].$get({
    param: {
      owner: 'jestsee',
      repository: 'jestsee.com'
    }
  }).catch(error => {
    console.error('Error fetching repository info:', error);
    return { status: 500 };
  });

  data = response.status === 200 ? await response.json() : null;

  if (data && data.pushedAt) {
    const date = new Date(data.pushedAt);
    formattedDate = formatDateByTimeZone(date);
  }
} catch (error) {
  console.error('Error in LastUpdatedTime component:', error);
  data = null;
}
---

{
  data ? (
    <p class:list={['text-xs min-[961px]:self-end', className]}>
      Last updated by Rayan <br class='xs:hidden' /> on {formattedDate} UTC+7
    </p>
  ) : (
    // TODO: handle error
    <p>Something went wrong ðŸ˜”</p>
  )
}
